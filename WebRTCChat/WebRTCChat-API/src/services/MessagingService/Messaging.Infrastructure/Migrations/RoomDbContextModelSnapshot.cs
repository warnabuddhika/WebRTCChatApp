// <auto-generated />
using System;
using Messaging.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Messaging.Infrastructure.Migrations
{
    [DbContext(typeof(RoomDbContext))]
    partial class RoomDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Messaging.Domain.Entities.Connection", b =>
                {
                    b.Property<string>("ConnectionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime?>("CreatedTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedById");

                    b.Property<DateTime?>("UpdatedTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConnectionId");

                    b.HasIndex("RoomId");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("Messaging.Domain.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime?>("CreatedTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime>("MessageSent")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ReciverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SenderDisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SenderUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedById");

                    b.Property<DateTime?>("UpdatedTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Messaging.Domain.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CountMember")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime?>("CreatedTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedById");

                    b.Property<DateTime?>("UpdatedTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Rooms", "msg");
                });

            modelBuilder.Entity("Messaging.Domain.Entities.RoomUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime?>("CreatedTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedById");

                    b.Property<DateTime?>("UpdatedTime")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RoomUser");
                });

            modelBuilder.Entity("Messaging.Domain.Entities.Connection", b =>
                {
                    b.HasOne("Messaging.Domain.Entities.Room", null)
                        .WithMany("Connections")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("Messaging.Domain.Entities.Room", b =>
                {
                    b.HasOne("Messaging.Domain.Entities.RoomUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Messaging.Domain.Entities.Room", b =>
                {
                    b.Navigation("Connections");
                });
#pragma warning restore 612, 618
        }
    }
}
